{"version":3,"sources":["listener.js","toggle.js","App.js","index.js"],"names":["Listener","props","useState","message","setIsMessage","style","padding","color","width","height","type","onChange","e","target","value","Toggle","valueis","setIsvalue","setIsStyle","className","onClick","App","rootElement","document","getElementById","createRoot","render"],"mappings":"gNAiBeA,EAfA,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAChB,EAA8BC,mBAAS,IAAG,mBAArCC,EAAO,KAAEC,EAAY,KAC1B,OACEH,GACE,sBAAKI,MAAO,CAAEC,QAAS,OAAQC,MAAO,eAAgB,UACpD,uBACEF,MAAO,CAAEE,MAAO,cAAeC,MAAO,QAASC,OAAQ,QACvDC,KAAK,OACLC,SAAU,SAACC,GAAC,OAAKR,EAAaQ,EAAEC,OAAOC,MAAM,IAE/C,6BAAKX,MAIb,E,MCeeY,MA3Bf,WACE,MAA4Bb,mBAAS,OAAM,mBAAtCc,EAAO,KAAEC,EAAU,KACxB,EAA0Bf,oBAAS,GAAM,mBAApCG,EAAK,KAAEa,EAAU,KAYtB,OACE,gCACE,uBACEC,UAAWd,EAAQ,OAAS,OAC5BK,KAAK,SACLI,MAAOE,EACPI,QAhBO,WACK,QAAZJ,GACFC,EAAW,MACXC,GAAW,IACU,OAAZF,IACTC,EAAW,OACXC,GAAW,GAEf,IAUI,cAAC,EAAQ,CAACjB,MAAOI,MAGvB,EC1Be,SAASgB,IACtB,OACE,qBAAKF,UAAU,MAAK,SAClB,cAAC,EAAM,KAGb,CCJA,IAAMG,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACL,EAAG,M","file":"static/js/main.f3967c0e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nlet Listener = ({ props }) => {\n  let [message, setIsMessage] = useState(\"\");\n  return (\n    props && (\n      <div style={{ padding: \"50px\", color: \"yellowgreen\" }}>\n        <input\n          style={{ color: \"yellowgreen\", width: \"200px\", height: \"25px\" }}\n          type=\"text\"\n          onChange={(e) => setIsMessage(e.target.value)}\n        ></input>\n        <h3>{message}</h3>\n      </div>\n    )\n  );\n};\nexport default Listener;\n","import { useState } from \"react\";\nimport Listener from \"./listener\";\nimport \"./toggle.css\";\n\nfunction Toggle() {\n  let [valueis, setIsvalue] = useState(\"OFF\");\n  let [style, setIsStyle] = useState(false);\n\n  let toggle = () => {\n    if (valueis === \"OFF\") {\n      setIsvalue(\"ON\");\n      setIsStyle(true);\n    } else if (valueis === \"ON\") {\n      setIsvalue(\"OFF\");\n      setIsStyle(false);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        className={style ? \"btn1\" : \"btn2\"}\n        type=\"Button\"\n        value={valueis}\n        onClick={toggle}\n      ></input>\n      <Listener props={style}></Listener>\n    </div>\n  );\n}\n\nexport default Toggle;\n","import \"./styles.css\";\nimport Toggle from \"./toggle\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Toggle></Toggle>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}